# Name:Quang Huy Nguyen
# Pharmacology Department, the university of Dainam, 
# Hanoi, Vietnam
# __________________________________________________
*********3.3. Exercise
1.
n <- 100
n * (n + 1) / 2 #5050
2.
n <- 1000
n * (n + 1) / 2 #500500
3.
B. seq creates a list of numbers and sum adds them up.
4.
log10(sqrt(100)) #1
5.
log(exp(x))

--------------------------------------------------------------------------------------------------

if(!require(dslabs)) install.packages("dslabs")
if(!require(tidyverse)) install.packages("tidyverse")
library("dslabs")
library("tidyverse")
data(murders)
*********3.6.Exercise
1.
str(murders)
# 'data.frame':	51 obs. of  5 variables:
#   $ state     : chr  "Alabama" "Alaska" "Arizona" "Arkansas" ...
# $ abb       : chr  "AL" "AK" "AZ" "AR" ...
# $ region    : Factor w/ 4 levels "Northeast","South",..: 2 4 4 2 4 4 1 2 2 2 ...
# $ population: num  4779736 710231 6392017 2915918 37253956 ...
# $ total     : num  135 19 232 93 1257 ...
2.
'state', 'abb', 'region', 'population', and 'total'
3.
a <- murders$abb 
class(a) #character
4.
b<-murders[,2]
identical(a,b) #TRUE
5.
length(levels(murders$region)) #4
6.
with(murders, state[region]) %>% table() 
#Alabama   Alaska  Arizona Arkansas 
#      9       17       12       13 

--------------------------------------------------------------------------------------------------

*********3.9.Exercise
1.
temp <- c(35,88,42,84,81,30)
2.
city <- c('Beijing', 'Lagos', 'Paris',  'Rio de Janeiro', 'San Juan', 'Toronto')
3.
names(temp) = city
4.
temp[1:3]
#Beijing   Lagos   Paris 
#     35      88      42
5.
temp[c('Paris' , 'San Juan')]
#Paris San Juan 
#42       81 
6.
12:73
7.
seq(1,99,2)
8.
seq(6,55,4/7)
length(seq(6,55,4/7)) #86
9.
a <- seq(1, 10, 0.5)
class(a) #numeric
10.
a <- seq(1, 10)
class(a) #numeric
11.
a<-1L
class(a) #integer
12.
x <- c("1", "3", "5")
class(as.integer(x))

--------------------------------------------------------------------------------------------------

*********3.11. Exercise
1.
pop <- murders$population
sort(pop)[1] #56362
2.
order(pop)[1] #51
3.
which.min(pop) #51
4.
murders$state[which.min(murders$population)] #[1] "Wyoming"
5.
temp <- c(35, 88, 42, 84, 81, 30)
city <- c("Beijing", "Lagos", "Paris", "Rio de Janeiro", "San Juan", "Toronto")
city_temps <- data.frame(name = city, temperature = temp)
ranks<-rank(city_temps$temperature) #[1] 2 6 3 5 4 1
my_df<-ranks %>% as.data.frame()
6.
ind <- order(my_df) #[1] 6 1 3 5 4 2
city_temps$name[ind]       
#[1] Toronto        Beijing        Paris         
#[4] San Juan       Rio de Janeiro Lagos   
#6 Levels: Beijing Lagos Paris Rio de Janeiro ... Toronto
7.
ind <- is.na(na_example) 
length(ind) #1000
8.
mean(!is.na(na_example)) #0.855

--------------------------------------------------------------------------------------------------

*********3.13. Exercise
1.
temp <- (c(35, 88, 42, 84, 81, 30) - 32) * 5/9
city <- c("Beijing", "Lagos", "Paris", "Rio de Janeiro", "San Juan", "Toronto")
city_temps <- data.frame(name = city, temperature = temp)
# name temperature
# 1        Beijing    1.666667
# 2          Lagos   31.111111
# 3          Paris    5.555556
# 4 Rio de Janeiro   28.888889
# 5       San Juan   27.222222
# 6        Toronto   -1.111111
2.
n <-seq(1,100)
sum(1/n^2) #1.634984
3.
murder_rate <- with(murders, total/population * 10^5) %>% mean() #2.779125

--------------------------------------------------------------------------------------------------

*********3.15. Exercise
1.
murder_rate = with(murders,total/population *10^5)
low <- murder_rate < 1
# [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
# [10] FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE
# [19] FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE
# [28] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE
# [37] FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE
# [46]  TRUE FALSE FALSE FALSE FALSE  TRUE
2.
which(low)
# [1] 12 13 16 20 24 30 35 38 42 45 46 51
3.
with(murders,state[which(low)])
# [1] "Hawaii"        "Idaho"         "Iowa"         
# [4] "Maine"         "Minnesota"     "New Hampshire"
# [7] "North Dakota"  "Oregon"        "South Dakota" 
# [10] "Utah"          "Vermont"       "Wyoming" 
4.
with(murders, state[region == "Northeast" & low])
# [1] "Maine"         "New Hampshire" "Vermont"  
5.
c <- murder_rate < mean(murder_rate)
length(which(c)) #27
6.
match(c("AK", "MI", "IA"), murders$abb)
#[1]  2 23 16
7.
c("MA", "ME", "MI", "MO", "MU") %in% murders$abb
#[1]  TRUE  TRUE  TRUE  TRUE FALSE
8.
which(!c("MA", "ME", "MI", "MO", "MU") %in% murders$abb) #[1] 5

--------------------------------------------------------------------------------------------------

*********3.17. Exercise
1.
with(murders,plot(log10(population/10^6), log10(total),
          xlab = "population in million (log scale)",
          ylab = "total (log scale)"))
2. 
with(murders,hist(population/10^6, xlab="population in million"))
3.
boxplot(population/10^6 ~ region, 
                       xlab = "region",
                       ylab = "popopulation in million",
                       data = murders)
